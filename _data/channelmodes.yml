- mode: b
  name: channel ban
  description: |
    Takes a [mask](#masks) as a parameter. Users matching the mask are
    prevented from joining or speaking. Sending `/mode #channel +b` alone will
    return the current ban list. While in the channel, banned users will be
    unable to send to the channel or change nick.

    You can append `$#channel` to any ban to redirect banned users to
    another channel.

    For example:
    `/mode #channel +b example!*@*$##fix_your_connection` would forward the
    user with nick example to the channel `##fix_your_connection`.
    `/mode #channel +b $~a$#channel-unreg would forward unidentified users to
    the channel `#channel-unreg`.
- mode: c
  name: colour filter
  description: Strip colour and formatting codes from channel messages.
- mode: C
  name: block CTCPs
  description: Blocks CTCP commands (other than `/me` actions).
- mode: e
  name: ban exemption
  description: |
    Takes a [mask](#masks) as a parameter. Ban exemption matches
    override `+b` and `+q` bans for all clients it matches, allowing the
    exempted user to join/speak as if they were not banned or quieted.
    This can be useful if it is necessary to ban an entire ISP due to
    persistent abuse, but some users from that ISP should still be allowed in.

    For example:
    `/mode #channel +bee *!*@*.example.com *!*someuser@host3.example.com $a:JohnDoe`
    would block all users from example.com, while still allowing someuser
    from host3 and JohnDoe to join.
- mode: f
  name: forward
  description: |
    Takes a channel name as a parameter. Users who cannot join the channel
    (because of `+i`, `+j`, `+l`, `+S`, `+r`, see below) are instead sent to
    the given channel. Clients are notified when the forward takes effect.

    An operator can set `/mode +f #channel2` only if they are an op in
    `#channel2` or if `#channel2` has mode `+F` set (see below).

    Usually you want to set forwards with `MLOCK`, because the channel will
    become empty over time and the channel modes are lost. You might also want
    to set `GUARD` to prevent the channel from becoming empty. An operator can
    use `MLOCK` with `+f` only if they have access flag `+s` in both channels,
    or if the channel to be forwarded to is `+F` and they have `+s` in the
    original channel.
- mode: F
  name: enable forwarding
  description: |
    Allow operators in other channels to forward clients to this channel,
    without requiring ops in the target channel.
- mode: g
  name: free invite
  description: |
    Anybody in the channel may invite others (using the `/invite` command)
    to the channel.
- mode: i
  name: invite only
  description: |
    Users are unable to join invite-only channels unless they are invited
    or match a `+I` entry.
- mode: I
  name: invite exemption
  description: |
    Takes a [mask](#masks) parameter. Matching clients do not need to be invited
    to join the channel when it is invite-only (`+i`). Unlike the `/invite`
    command, this does not override `+j`, `+l` and `+r`. Only channel operators
    can see `+I` changes or see the list with `/mode #channel +I`.

    Commonly used with the $a extban.
    `/mode #channel +I $a:example`
    would allow a user identified to services as example to enter #channel.
- mode: j
  name: join throttle
  description: |
    This mode takes one parameter of the form `n:t`, where `n` and `t` are
    positive integers. Only `n` users may join in each period of `t` seconds,
    so with e.g. `3:10` only 3 users could join within 10 seconds.
    Invited users can join regardless of `+j`, but are counted as normal.
    You can use this mode to prevent bot attacks. Observe the average join
    rate of your channel and pick a good value for `+j`. This mode could be
    combined with `+f` to forward throttled users to an overflow channel.
- mode: k
  name: password
  description: |
     To enter the channel, you must specify the password on your `/join`
     command. Keep in mind that modes locked with ChanServ's `MLOCK` command
     can be seen by anyone recreating the channel; this includes keys.
     Also keep in mind that users being on the channel when `+k` is set will
     see the key as well.
- mode: l
  name: join limit
  description: |
    Takes a positive integer parameter. Limits the number of users who can be
    in the channel at the same time.
- mode: L
  name: large ban list
  restricted: true
  description: Increase maximum number of `+beIq` entries.
- mode: m
  name: moderated
  description: |
    Only opped and voiced users can send to the channel. This mode does not
    prevent users from changing nicks.
- mode: 'n'
  name: prevent external send
  description: |
    Users outside the channel may not send messages to it.
    Keep in mind that bans and quiets will not apply to external users.
- mode: p
  name: private
  description: |
    The `KNOCK` command cannot be used on the channel, and users will not be
    shown the channel in whois output unless they share the channel with the
    requestor. The channel will still appear in channel lists and `WHO` output
    (set channel mode `+s` if this is not desired).
- mode: P
  name: permanent
  restricted: true
  description: Channel does not disappear when empty.
- mode: q
  name: quiet
  description: |
    Takes a [mask](#masks) parameter. Works like `+b` (channel ban), but allows
    matching users to join the channel.
- mode: Q
  name: block forwarded users
  description: |
    Users cannot be forwarded (see `+f` above) to a channel with `+Q`.
- mode: r
  name: block unidentified
  description: |
    Prevents users who are not identified to services from joining the channel.
- mode: s
  name: secret
  description: |
    This channel will not appear on channel lists or `WHO` or `WHOIS` output
    unless you are on it.
- mode: S
  name: TLS-only
  description: |
    Only users connected via TLS may join the channel while this mode is set.
    Users already in the channel are not affected.
- mode: t
  name: ops-topic
  description: Only channel operators may set the channel topic.
- mode: T
  name: block notice
  description: Blocks channel notices (other than CTCP replies, see `+C`).
- mode: u
  name: unfiltered
  description: |
    Receive messages that are filtered server side by Libera.Chat based on
    content, usually spam. Set `+u` if you want the channel to receive these
    messages. Also see the corresponding [user mode](/guides/usermodes).
- mode: z
  name: reduced moderation
  description: |
    The effects of `+b`, `+q`, and `+m` are relaxed. For each message, if that
    message would normally be blocked by one of these modes, it is instead
    sent to channel operators (`+o`).
